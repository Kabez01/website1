{"version":3,"sources":["index.js"],"names":["theme","purple","A500","createMuiTheme","palette","primary","main","secondary","input","color","allUsers","descriptions","AppComponent","state","filteredList","description","event","textInput","currentTarget","value","filter","user","toLowerCase","includes","this","setState","e","makeUpper","document","querySelector","charAt","toUpperCase","capitalTextInput","slice","addUser","unshift","removeUser","splice","indexOf","console","log","className","noValidate","autoComplete","id","label","variant","fullWidth","onChange","filterUsers","bind","onClick","addNewUser","remUser","editUser","UsersList","selectUser","users","descs","React","Component","Avatar","alt","src","length","map","index","key","desc","ReactDOM","render","getElementById"],"mappings":"6RAYMA,GAFQC,IAAOC,KAEPC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,YAGVE,MAAO,CACHC,MAAO,YAIPC,EAAU,CAAC,SAAU,OAAQ,cAAU,QAAS,UAAW,SAAS,OACpEC,EAAe,CAAC,UAIhBC,E,YAEJ,aAAe,IAAD,8BACZ,+CAEKC,MAAQ,CACXC,aAAcJ,EACdK,YAAaJ,GALH,E,yEASFK,GACV,IAAMC,EAAYD,EAAME,cAAcC,MAChCL,EAAgBJ,EAASU,QAAO,SAAAC,GAAI,OAAIA,EAAKC,cAAcC,SAASN,EAAUK,kBACpFE,KAAKC,SAAS,CAACX,mB,oCAGHY,GACZ,IAEMC,EAFMC,SAASC,cAAc,SACbV,MACMW,OAAO,GAAGC,cACtCP,KAAKC,SAAS,CAACE,gB,mCAIf,IAEIV,EAFQW,SAASC,cAAc,SAEbV,MACtB,GAAiB,KAAdF,EAAiB,CACpB,IAAMe,EAAmBf,EAAUa,OAAO,GAAGC,cAAgBd,EAAUgB,MAAM,GACvEC,EAAUxB,EAASyB,QAAQH,GAEjCR,KAAKC,SAAS,CAACS,e,gCAKf,IAEIjB,EAFQW,SAASC,cAAc,SAEbV,MACtB,GAAiB,KAAdF,EAAiB,CACpB,IAAMmB,EAAa1B,EAAS2B,OAAO3B,EAAS4B,QAAQrB,GAAY,GAC9DsB,QAAQC,IAAIJ,GACdZ,KAAKC,SAAS,CAACW,kB,yGAcf,OACE,6BACE,yBAAKK,UAAU,UACb,sCAEF,kBAAC,IAAD,CAAezC,MAAOA,GACtB,0BAAMyC,UAAU,QAAQC,YAAU,EAACC,aAAa,OAC9C,kBAAC,IAAD,CAAWC,GAAG,eAAeC,MAAM,kBAAapC,MAAM,UAAUqC,QAAQ,WAAWC,UAAU,OAAOC,SAAUxB,KAAKyB,YAAYC,KAAK1B,SAGtI,yBAAKiB,UAAU,QACb,kBAAC,IAAD,CAAQU,QAAS3B,KAAK4B,WAAWF,KAAK1B,MAAOsB,QAAQ,YAAYrC,MAAM,WAAvE,SACA,kBAAC,IAAD,CAAQ0C,QAAS3B,KAAK6B,QAAQH,KAAK1B,MAAOsB,QAAQ,YAAYrC,MAAM,aAApE,aACA,kBAAC,IAAD,CAAQ0C,QAAS3B,KAAK8B,SAASJ,KAAK1B,MAAOsB,QAAQ,YAAYrC,MAAM,WAArE,YAGF,kBAAC8C,EAAD,CAAWJ,QAAS3B,KAAKgC,WAAWN,KAAK1B,MAAOiC,MAAOjC,KAAKX,MAAMC,aAAc4C,MAAOlC,KAAKX,MAAME,mB,GAzE/E4C,IAAMC,WA+E3BC,EAAS,SAAC,GAAY,EAAXJ,MAEb,OACE,yBAAKhB,UAAU,SAASqB,IAAI,GAAGC,IAFjB,uBAMdR,EAAY,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MACzB,OAAGD,EAAMO,OAAS,EAEhB,4BACGP,EAAMQ,KAAI,SAAC5C,EAAM6C,GAAP,OAEX,wBAAIC,IAAK9C,GACT,kBAACwC,EAAD,MAEA,6BACE,uBAAGpB,UAAU,YACZpB,GAGAqC,EAAMO,KAAI,SAACG,GAAD,OACX,uBAAG3B,UAAU,cAAc0B,IAAKC,GAC/BA,YAWP,uBAAG3B,UAAU,QAAb,qBAKF4B,IAASC,OAAO,kBAAC1D,EAAD,MAAkBgB,SAAS2C,eAAe,U","file":"static/js/main.843a59c3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './main.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport purple from '@material-ui/core/colors/purple';\r\n\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst third = purple.A500;\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#4caf50',\r\n    },\r\n    secondary: {\r\n      main: '#f44336'\r\n    },\r\n  },\r\n  input: {\r\n      color: 'white',\r\n    },\r\n});\r\n\r\nconst allUsers =[\"Oliwia\", \"Asia\", \"Michał\", \"Kasia\", \"Ewelina\", \"Marcin\",\"Aga\"]\r\nconst descriptions = [\"Friend\"];\r\n\r\n\r\n\r\nclass AppComponent extends React.Component {\r\n  \r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      filteredList: allUsers,\r\n      description: descriptions,\r\n    };\r\n  }\r\n\r\n  filterUsers(event){\r\n    const textInput = event.currentTarget.value;\r\n    const filteredList =  allUsers.filter(user => user.toLowerCase().includes(textInput.toLowerCase()));\r\n    this.setState({filteredList})\r\n  }\r\n\r\n  makeUppercase(e){\r\n    let input = document.querySelector(\"input\");\r\n    let textInput = input.value;\r\n    const makeUpper = textInput.charAt(0).toUpperCase();\r\n    this.setState({makeUpper});\r\n  }\r\n\r\n  addNewUser(){\r\n    let input = document.querySelector(\"input\");\r\n\r\n    let textInput = input.value;\r\n    if(textInput !== ''){\r\n    const capitalTextInput = textInput.charAt(0).toUpperCase() + textInput.slice(1);\r\n    const addUser = allUsers.unshift(capitalTextInput);\r\n\r\n    this.setState({addUser});\r\n    }\r\n  }\r\n\r\n  remUser(){\r\n    let input = document.querySelector(\"input\");\r\n\r\n    let textInput = input.value;\r\n    if(textInput !== ''){\r\n    const removeUser = allUsers.splice(allUsers.indexOf(textInput), 1);\r\n      console.log(removeUser)\r\n    this.setState({removeUser});\r\n    }\r\n  }\r\n  editUser(){\r\n\r\n  } \r\n\r\n  selectUser(){\r\n\r\n  }\r\n  render() {\r\n\r\n\r\n\r\n    return(\r\n      <div>\r\n        <div className=\"header\">\r\n          <h1>Findo</h1>\r\n        </div>\r\n        <ThemeProvider theme={theme}>\r\n        <form className=\"input\" noValidate autoComplete=\"off\">\r\n          <TextField id=\"filled-basic\" label=\"Wpisz imię\" color=\"primary\" variant=\"standard\" fullWidth=\"true\" onChange={this.filterUsers.bind(this)} />\r\n        </form>\r\n\r\n        <div className=\"menu\">\r\n          <Button onClick={this.addNewUser.bind(this)} variant=\"contained\" color=\"primary\">dodaj</Button>\r\n          <Button onClick={this.remUser.bind(this)} variant=\"contained\" color=\"secondary\">usuń</Button>\r\n          <Button onClick={this.editUser.bind(this)} variant=\"contained\" color=\"default\">edytuj</Button>\r\n        </div>\r\n        </ThemeProvider>\r\n        <UsersList onClick={this.selectUser.bind(this)} users={this.state.filteredList} descs={this.state.description} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Avatar = ({users}) => {\r\n  const avatarurl = \"images/avatar.png\";\r\n    return(\r\n      <img className=\"avatar\" alt=\"\" src={avatarurl}></img>\r\n    );\r\n}\r\n\r\nconst UsersList = ({users, descs}) => {\r\n  if(users.length > 0){\r\n  return(\r\n    <ul>\r\n      {users.map((user, index) =>\r\n\r\n      <li key={user}>\r\n      <Avatar />\r\n\r\n      <div>\r\n        <p className=\"username\">\r\n        {user}\r\n        </p>\r\n    \r\n        {descs.map((desc) => \r\n        <p className=\"description\" key={desc}>\r\n        {desc}\r\n        </p>\r\n )} \r\n      </div>\r\n\r\n\r\n      </li>)}\r\n    </ul>);\r\n  }\r\nelse{\r\nreturn(\r\n  <p className=\"void\">Brak wyników!</p>\r\n  );\r\n}\r\n}\r\n\r\nReactDOM.render(<AppComponent />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}