{"version":3,"sources":["index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","input","color","allUsers","App","document","querySelector","state","filteredU","event","textInput","currentTarget","value","filter","user","toLowerCase","includes","this","setState","style","fontSize","label","addEventListener","capitalTextInput","charAt","toUpperCase","slice","addNew","unshift","indexOf","findUserIndex","removeUser","splice","mouseX","clientX","mouseY","clientY","mouseIsOver","elementFromPoint","console","log","className","noValidate","autoComplete","id","variant","onChange","filterUsers","bind","onClick","addUser","remUser","UsersList","users","listSelector","React","Component","length","map","key","ReactDOM","render","getElementById"],"mappings":"4QAUMA,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,YAGVE,MAAO,CACHC,MAAO,WAIPC,EAAW,CAAC,SAAU,OAAQ,cAAU,QAAS,UAAW,SAAU,OAKtEC,GAJMC,SAASC,cAAc,U,YAMjC,aAAe,IAAD,8BACZ,+CAEKC,MAAQ,CACXC,UAAWL,GAJD,E,yEAQFM,GACV,IAAMC,EAAYD,EAAME,cAAcC,MAChCJ,EAAaL,EAASU,QAAO,SAAAC,GAAI,OAAIA,EAAKC,cAAcC,SAASN,EAAUK,kBACjFE,KAAKC,SAAS,CAACV,gB,gCAKf,IAAIP,EAAQI,SAASC,cAAc,SAC/BI,EAAYT,EAAMW,MAEtB,GAAiB,KAAdF,GAAkC,8CAAdA,GAAiE,oDAAdA,EAOxE,OACET,EAAMkB,MAAMC,SAAW,OACvBnB,EAAMkB,MAAMjB,MAAQ,WACpBD,EAAMoB,MAAQ,4CACdpB,EAAMqB,iBAAiB,SAAS,WAC9BrB,EAAMoB,MAAQ,GACdpB,EAAMkB,MAAMjB,MAAQ,QACpBD,EAAMkB,MAAMC,SAAW,UAb7B,IAAMG,EAAmBb,EAAUc,OAAO,GAAGC,cAAgBf,EAAUgB,MAAM,GACvEC,EAASxB,EAASyB,QAAQL,GAEhCN,KAAKC,SAAS,CAACS,a,gCAiBf,IAAI1B,EAAQI,SAASC,cAAc,SAC/BI,EAAYT,EAAMW,MAEtB,KAAiB,KAAdF,GAAkC,oDAAdA,GAAoDP,EAAS0B,QAAQnB,IAAc,GAOxG,OACET,EAAMkB,MAAMC,SAAW,OACvBnB,EAAMkB,MAAMjB,MAAQ,WACpBD,EAAMoB,MAAQ,kDACdpB,EAAMqB,iBAAiB,SAAS,WAC9BrB,EAAMoB,MAAQ,GACdpB,EAAMkB,MAAMjB,MAAQ,QACpBD,EAAMkB,MAAMC,SAAW,UAb7B,IAAMU,EAAgB3B,EAAS0B,QAAQnB,GACjCqB,EAAa5B,EAAS6B,OAAOF,EAAe,GAElDb,KAAKC,SAAS,CAACa,iB,qCAiBf,IAAIE,EAAS5B,SAAS6B,QAClBC,EAAS9B,SAAS+B,QAClBC,EAAchC,SAASiC,iBAAiBL,EAAQE,GACpDI,QAAQC,IAAIH,K,+BAIZ,OACE,6BACE,yBAAKI,UAAU,UACb,uCAEF,kBAAC,IAAD,CAAe9C,MAAOA,GACtB,0BAAM8C,UAAU,QAAQC,YAAU,EAACC,aAAa,OAC9C,kBAAC,IAAD,CAAWC,GAAG,eAAevB,MAAM,kBAAanB,MAAM,UAAU2C,QAAQ,WAAWC,SAAU7B,KAAK8B,YAAYC,KAAK/B,SAGrH,yBAAKwB,UAAU,QACb,kBAAC,IAAD,CAAQQ,QAAShC,KAAKiC,QAAQF,KAAK/B,MAAO4B,QAAQ,YAAY3C,MAAM,WAApE,SACA,kBAAC,IAAD,CAAQ+C,QAAShC,KAAKkC,QAAQH,KAAK/B,MAAO4B,QAAQ,YAAY3C,MAAM,aAApE,aACA,kBAAC,IAAD,CAAQ2C,QAAQ,YAAY3C,MAAM,WAAlC,YAGF,kBAACkD,EAAD,CAAWC,MAAOpC,KAAKV,MAAMC,UAAWyC,QAAShC,KAAKqC,oB,GAzF5CC,IAAMC,YAgGlBJ,EAAY,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAClB,OAAGA,EAAMI,OAAS,EAEhB,4BACCJ,EAAMK,KAAI,SAAA5C,GAAI,OAAI,wBAAI6C,IAAK7C,GAAOA,OAKrC,uBAAG2B,UAAU,QAAb,qBAGFmB,IAASC,OAAO,kBAACzD,EAAD,MAASC,SAASyD,eAAe,U","file":"static/js/main.de89199c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './main.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#4caf50',\r\n    },\r\n    secondary: {\r\n      main: '#f44336'\r\n    },\r\n  },\r\n  input: {\r\n      color: 'white',\r\n    },\r\n});\r\n\r\nconst allUsers = [\"Oliwia\", \"Asia\", \"Michał\", \"Kasia\", \"Ewelina\", \"Marcin\", \"Aga\"];\r\nlet input = document.querySelector(\".input\");\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  \r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      filteredU: allUsers\r\n    };\r\n  }\r\n\r\n  filterUsers(event){\r\n    const textInput = event.currentTarget.value;\r\n    const filteredU =  allUsers.filter(user => user.toLowerCase().includes(textInput.toLowerCase()));\r\n    this.setState({filteredU})\r\n  }\r\n\r\n\r\n  addUser(){\r\n    let input = document.querySelector(\"input\");\r\n    let textInput = input.value;\r\n\r\n    if(textInput !== '' && textInput !== \"Aby dodać kontakt wpisz nazwę..\" && textInput !== \"Aby usunąć kontakt wpisz nazwę..\" ){\r\n    const capitalTextInput = textInput.charAt(0).toUpperCase() + textInput.slice(1);\r\n    const addNew = allUsers.unshift(capitalTextInput);\r\n\r\n    this.setState({addNew});\r\n    }\r\n    else{\r\n      return(\r\n        input.style.fontSize = \"15px\",\r\n        input.style.color = \"darkgrey\",\r\n        input.label = \"Aby dodać kontakt wpisz nazwę..\",\r\n        input.addEventListener('click', ()=>{\r\n          input.label = '';\r\n          input.style.color = \"black\";\r\n          input.style.fontSize = \"20px\";\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  remUser(){\r\n    let input = document.querySelector(\"input\");\r\n    let textInput = input.value;\r\n    \r\n    if(textInput !== '' && textInput !== \"Aby usunąć kontakt wpisz nazwę..\" && allUsers.indexOf(textInput) > -1){\r\n    const findUserIndex = allUsers.indexOf(textInput);\r\n    const removeUser = allUsers.splice(findUserIndex, 1);\r\n\r\n    this.setState({removeUser});\r\n    }\r\n    else{\r\n      return(\r\n        input.style.fontSize = \"15px\",\r\n        input.style.color = \"darkgrey\",\r\n        input.label = \"Aby usunąć kontakt wpisz nazwę..\",\r\n        input.addEventListener('click', ()=>{\r\n          input.label = '';\r\n          input.style.color = \"black\";\r\n          input.style.fontSize = \"20px\";\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  listSelector(){\r\n    let mouseX = document.clientX;\r\n    let mouseY = document.clientY;\r\n    let mouseIsOver = document.elementFromPoint(mouseX, mouseY);\r\n    console.log(mouseIsOver);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div className=\"header\">\r\n          <h1>FindO!</h1>\r\n        </div>\r\n        <ThemeProvider theme={theme}>\r\n        <form className=\"input\" noValidate autoComplete=\"off\">\r\n          <TextField id=\"filled-basic\" label=\"Wpisz imię\" color=\"primary\" variant=\"standard\" onChange={this.filterUsers.bind(this)} />\r\n        </form>\r\n\r\n        <div className=\"menu\">\r\n          <Button onClick={this.addUser.bind(this)} variant=\"contained\" color=\"primary\">dodaj</Button>\r\n          <Button onClick={this.remUser.bind(this)} variant=\"contained\" color=\"secondary\">usuń</Button>\r\n          <Button variant=\"contained\" color=\"default\">edytuj</Button>\r\n        </div>\r\n        </ThemeProvider>\r\n        <UsersList users={this.state.filteredU} onClick={this.listSelector} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst UsersList = ({users}) => {\r\n  if(users.length > 0){\r\n  return(\r\n    <ul>\r\n    {users.map(user => <li key={user}>{user}</li>)}\r\n    </ul>\r\n  );\r\n}\r\nreturn(\r\n  <p className=\"void\">Brak wyników!</p>);\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}